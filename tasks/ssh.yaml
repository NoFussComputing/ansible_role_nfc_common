# ---
# - name: Clear any existing SSH certs
#   ansible.posix.authorized_key:
#     user: "{{ localhost_username.stdout }}"
#     state: absent
#     key: "{{ lookup('file', '{{ configured_directory_root }}/files/{{ inventory_hostname }}/openssh-server_ssh_host_ed25519_key-cert.pub') }}"
#     path: '~/.ssh/known_hosts'
#   connection: local
#   delegate_to: localhost
#   # when:
#   #   "'init' not in {{ ansible_run_tags | default('') }}"
#   changed_when: "'never' == 'changed'"
#   tags:
#     - always


# - name: Configure SSH connection for hosts
#   ansible.posix.authorized_key:
#     user: "{{ localhost_username.stdout }}"
#     state: present
#     key: "{{ lookup('file', '{{ configured_directory_root }}/files/{{ inventory_hostname }}/openssh-server_ssh_host_ed25519_key.pub') }}"
#     path: '~/.ssh/known_hosts'
#     key_options: "{{ ansible_host }}"
#   delegate_to: localhost
#   connection: local
#   # when:
#   #   "'init' not in {{ ansible_run_tags | default('') }}"
#   changed_when: "'never' == 'changed'"
#   tags:
#     - always


# - name: Copy encrypted file to set location
#   copy:
#     decrypt: true
#     dest: "{{ configured_directory_temp_ansible }}/{{ inventory_hostname }}"
#     src: "{{ configured_directory_root }}/files/{{ inventory_hostname }}/ssh_user_deploy"
#     mode: '400'
#   delegate_to: localhost
#   connection: local
#   tags:
#     - always
#   # when:
#   #   "'init' not in {{ ansible_run_tags | default('') }}"

# - name: Set SSH connection Facts
#   ansible.builtin.set_fact:
#     ansible_ssh_private_key_file: "{{ configured_directory_temp_ansible }}/{{ inventory_hostname }}"
#     ansible_user: deploy
#     cacheable: true
#   tags:
#     - always
#   # when:
#   #   "'init' not in {{ ansible_run_tags | default('') }}"
#     #ansible_run_tags | default('') | length == 0
#   #delegate_to: localhost
